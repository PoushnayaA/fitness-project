(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initScroll = void 0;
var links = document.querySelectorAll('a[href^="#"]');
var initScroll = exports.initScroll = function initScroll() {
  links.forEach(function (anchor) {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      document.querySelector(anchor.getAttribute('href')).scrollIntoView({
        behavior: 'smooth'
      });
    });
  });
};

},{}],2:[function(require,module,exports){
"use strict";

var _iosVhFix = require("./utils/ios-vh-fix");
var _scroll = require("./extra-options/scroll");
var _initVideo = require("./modules/video/init-video");
var _initSliderJury = require("./modules/sliders/init-slider-jury");
// import {Form} from './modules/form-validate/form';
// ---------------------------------
window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------

  (0, _iosVhFix.iosVhFix)();

  // Modules
  // ---------------------------------

  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана
  window.addEventListener('load', function () {
    (0, _scroll.initScroll)();
    (0, _initVideo.initYoutubeVideo)();
    (0, _initSliderJury.initSliderJury)();
    // const form = new Form();
    // window.form = form;
    // form.init();
  });
});

// ---------------------------------

// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.

// привязывайте js не на классы, а на дата атрибуты (data-validate)

// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅

// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.

// для адаптивного JS используется matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();

// используйте .closest(el)

},{"./extra-options/scroll":1,"./modules/sliders/init-slider-jury":3,"./modules/video/init-video":4,"./utils/ios-vh-fix":6}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initSliderJury = void 0;
var sliderJury = document.querySelector('.jury__swiper');
var buttonNext = document.querySelector('.jury__button--next');
var buttonPrev = document.querySelector('.jury__button--prev');
var initSliderJury = exports.initSliderJury = function initSliderJury() {
  if (sliderJury) {
    // eslint-disable-next-line
    new Swiper(sliderJury, {
      navigation: {
        nextEl: buttonNext,
        prevEl: buttonPrev
      },
      // direction: 'vertical',

      loop: true,
      // direction: 'horizontal',

      // slidesPerView: 3,
      // spaceBetween: 20,
      // autoplay: {
      //   delay: 5000,
      //   disableOnInteraction: false,
      // },

      breakpoints: {
        1366: {
          slidesPerView: 4,
          spaceBetween: 40
        },
        768: {
          slidesPerView: 2,
          spaceBetween: 32
        },
        320: {
          slidesPerView: 1,
          spaceBetween: 20
        }
      }
    });
  }
};

},{}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initYoutubeVideo = void 0;
var container = document.querySelector('[data-video="about-video"]');
var cover = document.querySelector('[data-video="about-video"]').querySelector('picture');
var button = document.querySelector('[data-video="about-video"]').querySelector('[data-play-button="play-button"]');
var createVideo = function createVideo() {
  var video = document.createElement('iframe');
  video.setAttribute('src', 'https://www.youtube.com/embed/9TZXsZItgdw?autoplay=1');
  video.setAttribute('title', 'Бесплатные интерактивные онлайн-курсы');
  video.setAttribute('frameborder', '0');
  video.setAttribute('allow', 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share');
  video.setAttribute('allowfullscreen', '');
  video.classList.add('about__video-player');
  container.append(video);
};
var initYoutubeVideo = exports.initYoutubeVideo = function initYoutubeVideo() {
  if (container && cover && button) {
    button.addEventListener('click', function (event) {
      event.preventDefault();
      container.classList.remove('about__video--overlay');
      cover.style.display = 'none';
      button.style.display = 'none';
      var style = document.createElement('style');
      style.innerHTML = '.about__video::after { z-index: -1; }';
      document.head.appendChild(style);
      createVideo();
    });
  }
};

},{}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iosChecker = void 0;
var iosChecker = exports.iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform)
  // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

},{}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iosVhFix = void 0;
var _iosChecker = require("./ios-checker");
var iosVhFix = exports.iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if ((0, _iosChecker.iosChecker)()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};

},{"./ios-checker":5}]},{},[2])


//# sourceMappingURL=main.min.js.map
